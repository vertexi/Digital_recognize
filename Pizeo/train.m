function net = train(lamp_x,lamp_y,lambda,MaxIter)
% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by Neural Pattern Recognition app
% Created 13-Oct-2020 14:48:22
%
% This script assumes these variables are defined:
%
%   lamp_x - input data.
%   lamp_y - target data.

x = lamp_x';
t = lamp_y';

% Choose a Training Function
% For a list of all training functions type: help nntrain
% 'trainlm' is usually fastest.
% 'trainbr' takes longer but may be better for challenging problems.
% 'trainscg' uses less memory. Suitable in low memory situations.
trainFcn = 'trainscg';  % Scaled conjugate gradient backpropagation.

% Create a Pattern Recognition Network
hiddenLayerSize = 40;
net = patternnet(hiddenLayerSize, trainFcn);
net.layers{1}.transferFcn = 'logsig'; % Change default transfer function to match ex3/4 implementation

% Add regularization:
% Note that the MATLAB regularization parameter must lie between 0 and 1,
% where 0 correspnds to lambda = 0 (no regularization) and 1 corresponds to lambda = inf.
% We map the input lambda value to [0,1] using tanh function
net.performParam.regularization = tanh(lambda);
net.trainParam.epochs = MaxIter;
net.trainParam.showWindow = false; % Don't show training GUI

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

% Train the Network
[net,tr] = train(net,x,t);
end
